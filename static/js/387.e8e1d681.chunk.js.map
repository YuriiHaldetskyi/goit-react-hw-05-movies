{"version":3,"file":"static/js/387.e8e1d681.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAG,mCAEF,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC2BM,IAF7C,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,oBACkBR,IAFpC,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC0BR,IAF5C,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC0BR,IAF5C,cACCG,EADD,yBAIEA,EAASC,MAJX,kE,4IC/BMO,EAAOC,EAAAA,EAAAA,GAAH,gJAUJC,EAAWD,EAAAA,EAAAA,GAAH,sFAORE,EAAQF,EAAAA,EAAAA,IAAH,uL,kBC0ClB,EArDa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQb,GAAYc,EAAAA,EAAAA,MAAZd,QAgBR,OAdAe,EAAAA,EAAAA,YAAU,WACRJ,EAAU,SACVV,EAAAA,EAAAA,IAAaD,GACVgB,MAAK,SAAApB,GACJa,EAAQb,EAAKY,MACbG,EAAU,UACX,IACAM,OAAM,SAAAL,GACLH,EAAQ,IACRE,EAAU,YACVE,EAASD,EACV,GACJ,GAAE,CAACZ,KAGF,gCACE,iCACY,YAAXU,IACkB,IAAhBF,EAAKU,QACJ,SAACf,EAAD,UACGK,EAAKW,KAAI,SAAAC,GACR,OACE,UAACf,EAAD,YACE,SAACC,EAAD,CACEe,IACED,EAAKE,aAAL,UAjCD,mCAiCC,OACsBF,EAAKE,cACvBC,EAENC,IAAKJ,EAAKK,iBAEZ,wBAAKL,EAAKM,QACV,uCAAeN,EAAKO,eAVPP,EAAKQ,GAavB,OAGH,0DAEQ,SAAXlB,IAAqB,SAACmB,EAAA,EAAD,IACV,aAAXnB,IAAyB,uBAAIE,MAGnC,C","sources":["components/API.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = `36a3ac5838410dde3857f90e0e3f465d`;\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  padding: 20px;\n  transition: 0.3s;\n  flex-basis: 1200px;\n  flex-wrap: wrap;\n\n  &:hover {\n  }\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  width: 25%;\n`;\n\nexport const Image = styled.img`\n  width: 400px;\n  margin: 2px;\n  overflow: hidden;\n  display: block;\n  margin: 10px;\n  transition: 0.3s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { getMovieCast } from 'components/API';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, ListItem, Image } from './Cast.styled';\nimport NoPhoto from '../../photo/NoPhoto.jpg';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/w500';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('idle');\n    getMovieCast(movieId)\n      .then(data => {\n        setCast(data.cast);\n        setStatus('resolve');\n      })\n      .catch(error => {\n        setCast([]);\n        setStatus('rejected');\n        setError(error);\n      });\n  }, [movieId]);\n\n  return (\n    <section>\n      <h2>Cast</h2>\n      {status === 'resolve' &&\n        (cast.lenght !== 0 ? (\n          <List>\n            {cast.map(item => {\n              return (\n                <ListItem key={item.id}>\n                  <Image\n                    src={\n                      item.profile_path\n                        ? `${baseImageURL}${item.profile_path}`\n                        : NoPhoto\n                    }\n                    alt={item.original_name}\n                  />\n                  <h4>{item.name}</h4>\n                  <p>Character: {item.character}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        ) : (\n          <p> Sorry, no info about cast's </p>\n        ))}\n      {status === 'idle' && <Loader />}\n      {status === 'rejected' && <p>{error}</p>}\n    </section>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","response","data","getSearchMovies","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","List","styled","ListItem","Image","useState","cast","setCast","status","setStatus","error","setError","useParams","useEffect","then","catch","lenght","map","item","src","profile_path","NoPhoto","alt","original_name","name","character","id","Loader"],"sourceRoot":""}