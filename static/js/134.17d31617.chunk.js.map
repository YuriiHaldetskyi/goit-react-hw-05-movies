{"version":3,"file":"static/js/134.17d31617.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAG,mCAEF,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC2BM,IAF7C,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,oBACkBR,IAFpC,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC0BR,IAF5C,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BAC0BR,IAF5C,cACCG,EADD,yBAIEA,EAASC,MAJX,kE,qFC/BMO,E,OAAOC,EAAAA,GAAH,kI,SCgBjB,EAhBkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GAMlB,KAGN,C,uGCkCD,UA5Ce,WAAO,IAAD,EACnB,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KAEMzB,EAAK,UAAGoB,EAAaM,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACRJ,EAAU,SACVxB,EAAAA,EAAAA,IAAgBC,GACb4B,MAAK,SAAA9B,GACJoB,EAAUpB,EAAK+B,SACfN,EAAU,UACX,IACAO,OAAM,SAAAC,GACLb,EAAU,IACVO,EAASO,OAAOD,IAChBR,EAAU,WACX,GACJ,GAAE,CAACvB,IAQJ,OACE,6BACE,mCACA,kBAAMiC,aAAa,MAAMC,SATR,SAAAC,GACnBA,EAAIC,iBACJ,IAAMpC,EAAQmC,EAAIE,cAAcC,SAASC,OAAOC,MAAMC,OACtDpB,EAAgBrB,EAAQ,CAAEA,MAAAA,GAAU,CAAC,EACtC,EAKG,WACE,kBAAO0C,KAAK,SAASC,KAAK,YAC1B,mBAAQD,KAAK,SAAb,UACE,SAAC,MAAD,UAGJ,SAAC,IAAD,CAAWnC,OAAQA,IACP,SAAXe,IAAqB,SAAC,IAAD,IACV,aAAXA,IAAyB,uBAAIE,MAGnC,C","sources":["components/API.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = `36a3ac5838410dde3857f90e0e3f465d`;\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  text-decoration: none;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './MovieList.styled';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../components/API';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState('');\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    setStatus('idle');\n    getSearchMovies(query)\n      .then(data => {\n        setMovies(data.results);\n        setStatus('resolve');\n      })\n      .catch(err => {\n        setMovies([]);\n        setError(String(err));\n        setStatus('rejected');\n      });\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const query = evt.currentTarget.elements.search.value.trim();\n    setSearchParams(query ? { query } : {});\n  };\n\n  return (\n    <main>\n      <h1>Movie</h1>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <input type=\"search\" name=\"search\" />\n        <button type=\"submit\">\n          <AiOutlineSearch />\n        </button>\n      </form>\n      <MovieList movies={movies} />\n      {status === 'idle' && <Loader />}\n      {status === 'rejected' && <p>{error}</p>}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","response","data","getSearchMovies","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","List","styled","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","error","setError","get","useEffect","then","results","catch","err","String","autoComplete","onSubmit","evt","preventDefault","currentTarget","elements","search","value","trim","type","name"],"sourceRoot":""}